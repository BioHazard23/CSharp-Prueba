@model PruebaCSharp.Models.Appointment

@{
    ViewData["Title"] = "Detalles de la Cita";
}

<h2>Detalles de la Cita</h2>

<div class="card">
    <div class="card-header">
        <h4>Appointment #@Model.Id</h4>
        <span class="badge bg-@(Model.Status.ToString() == "Scheduled" ? "success" : Model.Status.ToString() == "Cancelled" ? "danger" : "primary") fs-6">
            @Html.DisplayFor(model => model.Status)
        </span>
    </div>
    <div class="card-body">
        <div class="row">
            <div class="col-md-6">
                <h5>Patient Information</h5>
                <dl class="row">
                    <dt class="col-sm-4">Name:</dt>
                    <dd class="col-sm-8">@Html.DisplayFor(model => model.Patient.Name)</dd>
                    
                    <dt class="col-sm-4">Document:</dt>
                    <dd class="col-sm-8">@Html.DisplayFor(model => model.Patient.Document)</dd>
                    
                    <dt class="col-sm-4">Phone:</dt>
                    <dd class="col-sm-8">@Html.DisplayFor(model => model.Patient.Phone)</dd>
                    
                    <dt class="col-sm-4">Email:</dt>
                    <dd class="col-sm-8">@Html.DisplayFor(model => model.Patient.Email)</dd>
                </dl>
            </div>
            <div class="col-md-6">
                <h5>Doctor Information</h5>
                <dl class="row">
                    <dt class="col-sm-4">Name:</dt>
                    <dd class="col-sm-8">@Html.DisplayFor(model => model.Doctor.Name)</dd>
                    
                    <dt class="col-sm-4">Specialty:</dt>
                    <dd class="col-sm-8">
                        <span class="badge bg-info">@Html.DisplayFor(model => model.Doctor.Specialty)</span>
                    </dd>
                    
                    <dt class="col-sm-4">Phone:</dt>
                    <dd class="col-sm-8">@Html.DisplayFor(model => model.Doctor.Phone)</dd>
                    
                    <dt class="col-sm-4">Email:</dt>
                    <dd class="col-sm-8">@Html.DisplayFor(model => model.Doctor.Email)</dd>
                </dl>
            </div>
        </div>
        
        <hr>
        
        <div class="row">
            <div class="col-md-6">
                <h5>Detalles de la Cita</h5>
                <dl class="row">
                    <dt class="col-sm-4">Date:</dt>
                    <dd class="col-sm-8">@Model.AppointmentDate.ToString("dddd, MMMM dd, yyyy")</dd>
                    
                    <dt class="col-sm-4">Time:</dt>
                    <dd class="col-sm-8">@Model.AppointmentTime.ToString(@"hh\:mm")</dd>
                    
                    <dt class="col-sm-4">Status:</dt>
                    <dd class="col-sm-8">
                        <span class="badge bg-@(Model.Status.ToString() == "Scheduled" ? "success" : Model.Status.ToString() == "Cancelled" ? "danger" : "primary")">
                            @Html.DisplayFor(model => model.Status)
                        </span>
                    </dd>
                </dl>
            </div>
            <div class="col-md-6">
                <h5>System Information</h5>
                <dl class="row">
                    <dt class="col-sm-4">Created:</dt>
                    <dd class="col-sm-8">@Html.DisplayFor(model => model.CreatedAt)</dd>
                    
                    <dt class="col-sm-4">Updated:</dt>
                    <dd class="col-sm-8">@Html.DisplayFor(model => model.UpdatedAt)</dd>
                </dl>
            </div>
        </div>
        
        @if (!string.IsNullOrEmpty(Model.Notes))
        {
            <hr>
            <h5>Notes</h5>
            <p class="text-muted">@Html.DisplayFor(model => model.Notes)</p>
        }
    </div>
</div>

@if (Model.EmailLogs != null && Model.EmailLogs.Any())
{
    <div class="card mt-4">
        <div class="card-header">
            <h5>Email History</h5>
        </div>
        <div class="card-body">
            <div class="table-responsive">
                <table class="table table-striped">
                    <thead>
                        <tr>
                            <th>Sent At</th>
                            <th>Recipient</th>
                            <th>Subject</th>
                            <th>Status</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var emailLog in Model.EmailLogs.OrderByDescending(e => e.SentAt))
                        {
                            <tr>
                                <td>@emailLog.SentAt.ToString("MMM dd, yyyy HH:mm")</td>
                                <td>@emailLog.RecipientEmail</td>
                                <td>@emailLog.Subject</td>
                                <td>
                                    <span class="badge bg-@(emailLog.Status.ToString() == "Sent" ? "success" : "danger")">
                                        @emailLog.Status
                                    </span>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>
}

<div class="mt-3">
    @if (Model.Status == PruebaCSharp.Models.AppointmentStatus.Scheduled)
    {
        <form asp-action="Cancel" asp-route-id="@Model.Id" method="post" class="d-inline">
            <button type="submit" class="btn btn-warning" onclick="return confirm('Are you sure you want to cancel this appointment?')">Cancel Appointment</button>
        </form>
        <form asp-action="MarkAttended" asp-route-id="@Model.Id" method="post" class="d-inline">
            <button type="submit" class="btn btn-success" onclick="return confirm('Mark this appointment as attended?')">Mark as Attended</button>
        </form>
    }
    <a class="btn btn-primary" asp-action="Edit" asp-route-id="@Model.Id">Edit</a>
    <a class="btn btn-secondary" asp-action="Index">Volver a la Lista</a>
</div>
