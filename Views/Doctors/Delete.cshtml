@model PruebaCSharp.Models.Doctor

@{
    ViewData["Title"] = "Eliminar Médico";
}

<h2>Eliminar Médico</h2>

<div class="alert alert-warning">
    <h4>¿Está seguro de que desea eliminar este médico?</h4>
    <p>Esta acción no se puede deshacer. Si el médico tiene citas activas, la eliminación será prevenida.</p>
</div>

<div class="card">
    <div class="card-header">
        <h4>@Html.DisplayFor(model => model.Name)</h4>
        <span class="badge bg-info fs-6">@Html.DisplayFor(model => model.Specialty)</span>
    </div>
    <div class="card-body">
        <dl class="row">
            <dt class="col-sm-3">Documento:</dt>
            <dd class="col-sm-9">@Html.DisplayFor(model => model.Document)</dd>
            
            <dt class="col-sm-3">Especialidad:</dt>
            <dd class="col-sm-9">@Html.DisplayFor(model => model.Specialty)</dd>
            
            <dt class="col-sm-3">Teléfono:</dt>
            <dd class="col-sm-9">@Html.DisplayFor(model => model.Phone)</dd>
            
            <dt class="col-sm-3">Correo:</dt>
            <dd class="col-sm-9">@Html.DisplayFor(model => model.Email)</dd>
            
            <dt class="col-sm-3">Fecha de Registro:</dt>
            <dd class="col-sm-9">@Model.CreatedAt.ToString("dd/MM/yyyy HH:mm")</dd>
        </dl>
    </div>
</div>

@if (Model.Appointments != null && Model.Appointments.Any(a => a.Status != PruebaCSharp.Models.AppointmentStatus.Cancelled))
{
    <div class="alert alert-danger mt-3">
        <h5>⚠️ No se puede eliminar el médico</h5>
        <p>Este médico tiene citas activas. Por favor, cancele o complete todas las citas antes de eliminar el médico.</p>
        <p><strong>Citas Activas:</strong> @Model.Appointments.Count(a => a.Status != PruebaCSharp.Models.AppointmentStatus.Cancelled)</p>
    </div>
}

<form asp-action="Delete" class="mt-3">
    <input type="hidden" asp-for="Id" />
    <button type="submit" class="btn btn-danger">Eliminar Médico</button>
    <a class="btn btn-secondary" asp-action="Index">Cancelar</a>
</form>